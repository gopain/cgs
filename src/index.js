var chalk = require('chalk');
var fs = require('fs-extra');
var path = require('path');
var init = require('./init');

function createGraphQLServer(name, verbose) {
    var root = path.resolve(name); //Full path
    var appName = path.basename(root); //last name in path string

    //Ensures that the directory exists. 
    //If the directory structure does not exist, it is created. Like mkdir -p.
    fs.ensureDirSync(name);

    //check if the directory is valid
    if (!isSafeToCreateProjectIn(root)) {
        console.log('The directory ' + chalk.green(name) + ' contains files that could conflict.');
        console.log('Try using a new directory name.');
        process.exit(1);
    }

    console.log(
        'Creating a new GraphQL server ' + chalk.cyan(appName) + ' in ' + chalk.green(root) + '.'
    );
    console.log();

    var packageJson = {
        name: appName,
        version: '0.1.0',
        private: true,
    };
    fs.writeFileSync(
        path.join(root, 'package.json'),
        JSON.stringify(packageJson, null, 2)
    );

    var originalDirectory = process.cwd();
    process.chdir(root);

    init(root,appName,verbose,originalDirectory);
}


// If project only contains files generated by GH, itâ€™s safe.
function isSafeToCreateProjectIn(root) {
  var validFiles = [
    '.DS_Store', 'Thumbs.db', '.git', '.gitignore', '.idea', 'README.md', 'LICENSE', '.vscode'
  ];
  return fs.readdirSync(root)
    .every(function(file) {
      return validFiles.indexOf(file) >= 0;
    });
}




// Allows us to call this function from outside of the library file.
// Without this, the function would be private to this file.
exports.createGraphQLServer = createGraphQLServer;




